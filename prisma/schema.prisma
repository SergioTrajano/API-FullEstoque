// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String

  categories Category[]
  clients    Client[]

  @@map("users")
}

model Category {
  id     Int    @id @default(autoincrement())
  userId Int
  user   User   @relation(fields: [userId], references: [id])
  name   String @unique

  products Product[]

  @@map("categories")
}

model Product {
  id          Int      @id @default(autoincrement())
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  name        String
  description String
  barcode     String
  price       Decimal  @db.Decimal(7, 2)

  purchases Purchase[]
  sells     Sell[]

  @@map("products")
}

model Client {
  id          Int    @id @default(autoincrement())
  userId      Int
  user        User   @relation(fields: [userId], references: [id])
  name        String
  phoneNumber Int
  CPF         String
  RG          Int

  sells Sell[]

  @@map("clients")
}

model Purchase {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  totalPrice Decimal  @db.Decimal(7, 2)
  createdAt  DateTime @default(now())

  @@map("purchases")
}

model Sell {
  id         Int      @id @default(autoincrement())
  productId  Int
  clientId   Int
  client     Client   @relation(fields: [clientId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  totalPrice Decimal  @db.Decimal(7, 2)
  createdAt  DateTime @default(now())

  @@map("sells")
}
